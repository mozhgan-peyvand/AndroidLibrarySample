plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-android'
    id 'maven-publish'

}

android {
    namespace 'com.example.main_library_published'
    compileSdk 33

    defaultConfig {
        minSdk 24

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }

    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.5'
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

}

dependencies {

    implementation(project(":dependent-library-two"))
    implementation(project(":dependent-library-one"))

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation libs.lifecycle.runtime.ktx
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    implementation libs.activityCompose
    implementation libs.composeCompiler
    implementation libs.composeFoundation
    implementation libs.composeMaterial
    implementation libs.composeRuntime
    implementation libs.composeUi
    implementation libs.composeUiGraphics
    implementation libs.composeUiTooling
    androidTestImplementation platform(libs.compose.bom)
    androidTestImplementation libs.ui.test.junit4
    debugImplementation libs.ui.tooling
    debugImplementation libs.ui.test.manifest

    implementation libs.roomRuntime
    kapt libs.roomCompiler
}

publishing {
    repositories {
        maven {
            url "$buildDir/repo"
        }
    }
    publications {
        register("Debug", MavenPublication) {
            pom.withXml {
                def dependenciesNode = asNode().appendNode("dependencies")

                configurations.implementation.allDependencies.each { dependency ->
                    if (dependency.name != "unspecified") {
                        def dependencyNode = dependenciesNode.appendNode("dependency")
                        dependencyNode.appendNode("groupId", dependency.group)
                        dependencyNode.appendNode("artifactId", dependency.name)
                        dependencyNode.appendNode("version", dependency.version)
                    }
                }

                // Add dependencies on library one and library two
                def libraryOneDependency = dependenciesNode.appendNode("dependency")
                libraryOneDependency.appendNode("groupId", "com.example.dependent_library_one") // Customize with the actual group ID of library one
                libraryOneDependency.appendNode("artifactId", "library-one") // Customize with the actual artifact ID of library one
                libraryOneDependency.appendNode("version", "2.0.0") // Customize with the actual version of library one

                def libraryTwoDependency = dependenciesNode.appendNode("dependency")
                libraryTwoDependency.appendNode("groupId", "com.example.dependent_library_two") // Customize with the actual group ID of library two
                libraryTwoDependency.appendNode("artifactId", "library-two") // Customize with the actual artifact ID of library two
                libraryTwoDependency.appendNode("version", "2.0.0") // Customize with the actual version of library two

            }

            artifacts {
                def artifactFile = file("$buildDir/outputs/aar/${project.name}-debug.aar")
                artifact(artifactFile) {
                    artifactId = "${project.name}-debug"
                }
            }
        }
    }
}
